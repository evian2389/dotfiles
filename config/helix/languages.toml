################################
### Configuration for lsp-ai ###
################################

[language-server.lsp-ai]
command = "lsp-ai"

[language-server.lsp-ai.config.memory]
file_store = { }

# [language-server.lsp-ai.config.models.model1]
# type = "anthropic"
# chat_endpoint = "https://api.anthropic.com/v1/messages"
# model = "claude-3-5-sonnet-20240620"
# auth_token_env_var_name = ""
#
# [language-server.lsp-ai.config.models.model1]
# type = "gemini"
# chat_endpoint = "https://generativelanguage.googleapis.com/v1beta/models/"
# model = "gemini-2.0-flash-latest"
# auth_token_env_var_name = ""

[[language-server.lsp-ai.config.chat]]
trigger = "!C"
action_display_name = "Chat"
model = "model1"

[language-server.lsp-ai.config.chat.parameters]
max_context = 4096
max_tokens = 1024
system = "You are a code assistant chatbot. The user will ask you for assistance coding and you will do you best to answer succinctly and accurately"

#################################
## Configuration for languages ##
#################################

## Every file type we intend to chat in needs to have lsp-ai enabled
[[language]]
name = "markdown"
#language-servers = ["lsp-ai"]
language-servers = ["lsp-ai", "markdown-oxide"]
formatter = { command = "dprint", args = ["fmt", "--stdin", "md"]}
auto-format = true

#########################

[language-server.steel-language-server]
command = "steel-language-server"

#[[language]]
#name = "scheme"
#language-servers = [ "steel-language-server" ]


################C++######
################
[[language]]
name = "cpp"
language-servers = [ "clangd" ]

[language-server.clangd]
command = "clangd"
args = ["--compile-commands-dir=build"]
